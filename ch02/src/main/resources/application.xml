<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="jdbc:mysql://10.211.55.8:3306/SCT"></property>
        <property name="username" value="spring"></property>
        <property name="password" value="111111"></property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <property name="dataSource" ref="myDataSource"></property>
        <property name="configLocation" value="classpath:mybatis.xml"></property>
    </bean>

    <!-- 创建dao对象，使用sqlSession的getMapper(StudentDao.class)
      MapperScannerConfigurator:在内部调用getMapper()生成每个dao接口的代理对象
      -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

        <!--  getMapper() 根据接口对应xml文件创建Dao接口的实现，使用的接口方式的动态代理-->
        <!-- 指定包名，包名是dao接口所在的包名
         MapperScannerConfigurer会扫描这个包中的所有接口，把每个接口都执行一次getMapper()方法，得到每个接口的dao对象，默认名称是接口名首字母小写
         创建好的dao对象放到了Spring容器中
         -->
        <property name="basePackage" value="ding.local.dao"></property>
    </bean>

    <bean id="userService" class="ding.local.services.imp.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>
</beans>